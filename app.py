# -*- coding: utf-8 -*-
"""visualizationRedesign.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_AY1g9VdD5MN01oz-b3U1qaLNwHr15dt
"""

#installations
import streamlit as st
import pandas as pd
import plotly.graph_objects as go
import plotly.express as px

#upload data
df = pd.read_csv("betterdamdata.csv")
df.head()

average_people = df["people"].mean()
df["people"] = df["people"].fillna(average_people)

# Set page config and background color
st.set_page_config(page_title="Dam Visualization Dashboard", layout="wide")

# Apply custom CSS for background and text color
st.markdown("""
    <style>
    body {
        background-color: #00296B;
        color: white;
    }
    .stApp {
        background-color: #00296B;
    }
    .block-container {
        padding-top: 1rem;
    }
    .reportview-container {
        background: #00296B;
    }
    </style>
""", unsafe_allow_html=True)

st.markdown("""
    <style>
    .stTextInput > label {
        color: white;
    }
    .stTextInput input {
        color: white;
        background-color: #00509D;
        border: 1px solid white;
    }
    </style>
""", unsafe_allow_html=True)

# Page title
st.markdown("<h1 style='text-align: center; color: white;'>Dam Visualization Dashboard</h1>", unsafe_allow_html=True)

# Search bar
search_value = st.text_input("üîç Search for a dam:", "", help="Type part of the dam's name")

# Default project
if search_value:
    matching_dams = df[df["Project name"].str.contains(search_value, case=False, na=False)]
    project_name = matching_dams['Project name'].iloc[0] if not matching_dams.empty else "Keeyask"
else:
    project_name = "Keeyask"

dam_data = df[df["Project name"] == project_name]

# Set up two columns
col1, col2 = st.columns([1.2, 1])

# ----------- COLUMN 1: Info + Plot -----------

with col1:
    st.markdown("<h3 style='color: white;'>Dam Information</h3>", unsafe_allow_html=True)

    info = dam_data[['Project name', 'Country', 'people', 'lastOb']].iloc[0]
    display_name_map = {
        "Project name": "Name",
        "Country": "Country",
        "people": "Dependant Population",
        "lastOb": "Last Observation"
    }

    # Nice styled box with dam info
    with st.container():
        for key, value in info.items():
            st.markdown(
                f"<div style='background-color:#003F88; padding: 10px; border-radius: 8px; margin-bottom: 5px;'>"
                f"<strong style='color:#FFD500;'>{display_name_map.get(key, key)}:</strong> "
                f"<span style='color:white;'>{value}</span>"
                f"</div>", unsafe_allow_html=True
            )

    # Line plot
    st.markdown("<h3 style='color: white;'>Surface Area Over Time</h3>", unsafe_allow_html=True)

    month_order = [
        "jan", "feb", "mar", "apr", "may", "jun",
        "jul", "aug", "sep", "oct", "nov", "dec"
    ]

    dam_data["month"] = pd.Categorical(dam_data["month"], categories=month_order, ordered=True)
    dam_data = dam_data.sort_values(by="month")

    line_fig = go.Figure()
    line_fig.add_trace(go.Scatter(
        x=dam_data["month"],
        y=dam_data["area"],
        mode='lines+markers',
        name="Surface Area",
        line=dict(color='#FFD500'),
        marker=dict(color='#FDC500')
    ))
    line_fig.update_layout(
        paper_bgcolor="#003F88",
        plot_bgcolor="#00509D",
        font=dict(color="white"),
        xaxis=dict(title="Month", color="white", gridcolor="#003F88"),
        yaxis=dict(title="Surface Area", color="white", gridcolor="#003F88"),
        showlegend=False
    )
    st.plotly_chart(line_fig, use_container_width=True)

# ----------- COLUMN 2: Map -----------

with col2:
    st.markdown("<h3 style='color: white;'>Map View</h3>", unsafe_allow_html=True)

    fig_map = px.scatter_mapbox(
        df,
        lat="LAT_cleaned",
        lon="Lon_Cleaned",
        hover_name="Project name",
        size="people",
        size_max=10,
        color="Country",
        color_discrete_map={
            "Canada": "#00296B",
            "Argentina": "#003F88",
            "Guyana": "#00509D",
            "Brazil": "#FDC500",
            "United States": "#FFD500",
            "Bolivia":"#00A676",
        },
        zoom=2,
        height=630
    )

    fig_map.update_layout(
        mapbox_style="open-street-map",
        margin={"r":0,"t":0,"l":0,"b":0},
        paper_bgcolor="#003F88",
        font=dict(color="white")
    )

    st.plotly_chart(fig_map, use_container_width=True)